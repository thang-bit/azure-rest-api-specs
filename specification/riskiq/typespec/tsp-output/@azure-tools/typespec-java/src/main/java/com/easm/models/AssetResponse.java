// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.easm.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.OffsetDateTime;
import java.util.List;

/** AssetResponse. */
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.PROPERTY,
        property = "kind",
        defaultImpl = AssetResponse.class)
@JsonTypeName("AssetResponse")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "as", value = AsAssetResponse.class),
    @JsonSubTypes.Type(name = "contact", value = ContactAssetResponse.class),
    @JsonSubTypes.Type(name = "domain", value = DomainAssetResponse.class),
    @JsonSubTypes.Type(name = "host", value = HostAssetResponse.class),
    @JsonSubTypes.Type(name = "ipAddress", value = IpAddressAssetResponse.class),
    @JsonSubTypes.Type(name = "ipBlock", value = IpBlockAssetResponse.class),
    @JsonSubTypes.Type(name = "page", value = PageAssetResponse.class),
    @JsonSubTypes.Type(name = "sslCert", value = SslCertAssetResponse.class)
})
@Immutable
public class AssetResponse {
    /*
     * The system generated unique id for the resource.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The caller provided unique name for the resource.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The name that can be used for display purposes.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /*
     * Global UUID for the asset.
     */
    @JsonProperty(value = "uuid")
    private String uuid;

    /*
     * The asset property.
     */
    @JsonProperty(value = "asset", required = true)
    private Object asset;

    /*
     * The date this asset was first added to this workspace.
     */
    @JsonProperty(value = "createdDate")
    private OffsetDateTime createdDate;

    /*
     * The date this asset was last updated for this workspace.
     */
    @JsonProperty(value = "updatedDate")
    private OffsetDateTime updatedDate;

    /*
     * The state property.
     */
    @JsonProperty(value = "state")
    private AssetState state;

    /*
     * An optional customer provided identifier for this asset.
     */
    @JsonProperty(value = "externalId")
    private String externalId;

    /*
     * Customer labels assigned to this asset.
     */
    @JsonProperty(value = "labels")
    private List<String> labels;

    /*
     * An indicator of whether this asset represents a wildcard rollup of assets on this domain.
     */
    @JsonProperty(value = "wildcard")
    private Boolean wildcard;

    /*
     * The name of the DiscoveryGroup that brought added this asset to the workspace.
     */
    @JsonProperty(value = "discoGroupName")
    private String discoGroupName;

    /*
     * The history of how this asset was pulled into the workspace through the discovery process.
     */
    @JsonProperty(value = "auditTrail")
    private List<AuditTrailItem> auditTrail;

    /*
     * The reason property.
     */
    @JsonProperty(value = "reason")
    private String reason;

    /**
     * Creates an instance of AssetResponse class.
     *
     * @param asset the asset value to set.
     */
    @JsonCreator
    protected AssetResponse(@JsonProperty(value = "asset", required = true) Object asset) {
        this.asset = asset;
    }

    /**
     * Get the id property: The system generated unique id for the resource.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Get the name property: The caller provided unique name for the resource.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Get the displayName property: The name that can be used for display purposes.
     *
     * @return the displayName value.
     */
    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * Get the uuid property: Global UUID for the asset.
     *
     * @return the uuid value.
     */
    public String getUuid() {
        return this.uuid;
    }

    /**
     * Get the asset property: The asset property.
     *
     * @return the asset value.
     */
    public Object getAsset() {
        return this.asset;
    }

    /**
     * Get the createdDate property: The date this asset was first added to this workspace.
     *
     * @return the createdDate value.
     */
    public OffsetDateTime getCreatedDate() {
        return this.createdDate;
    }

    /**
     * Get the updatedDate property: The date this asset was last updated for this workspace.
     *
     * @return the updatedDate value.
     */
    public OffsetDateTime getUpdatedDate() {
        return this.updatedDate;
    }

    /**
     * Get the state property: The state property.
     *
     * @return the state value.
     */
    public AssetState getState() {
        return this.state;
    }

    /**
     * Get the externalId property: An optional customer provided identifier for this asset.
     *
     * @return the externalId value.
     */
    public String getExternalId() {
        return this.externalId;
    }

    /**
     * Get the labels property: Customer labels assigned to this asset.
     *
     * @return the labels value.
     */
    public List<String> getLabels() {
        return this.labels;
    }

    /**
     * Get the wildcard property: An indicator of whether this asset represents a wildcard rollup of assets on this
     * domain.
     *
     * @return the wildcard value.
     */
    public Boolean isWildcard() {
        return this.wildcard;
    }

    /**
     * Get the discoGroupName property: The name of the DiscoveryGroup that brought added this asset to the workspace.
     *
     * @return the discoGroupName value.
     */
    public String getDiscoGroupName() {
        return this.discoGroupName;
    }

    /**
     * Get the auditTrail property: The history of how this asset was pulled into the workspace through the discovery
     * process.
     *
     * @return the auditTrail value.
     */
    public List<AuditTrailItem> getAuditTrail() {
        return this.auditTrail;
    }

    /**
     * Get the reason property: The reason property.
     *
     * @return the reason value.
     */
    public String getReason() {
        return this.reason;
    }
}
