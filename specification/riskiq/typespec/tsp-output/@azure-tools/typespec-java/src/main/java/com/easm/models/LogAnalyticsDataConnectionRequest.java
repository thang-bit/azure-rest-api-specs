// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.easm.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** The LogAnalyticsDataConnectionRequest model. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("logAnalytics")
@Fluent
public final class LogAnalyticsDataConnectionRequest extends DataConnectionRequest {
    /*
     * The properties property.
     */
    @JsonProperty(value = "properties", required = true)
    private LogAnalyticsDataConnectionProperties properties;

    /**
     * Creates an instance of LogAnalyticsDataConnectionRequest class.
     *
     * @param properties the properties value to set.
     * @param properties the properties value to set.
     */
    @JsonCreator
    public LogAnalyticsDataConnectionRequest(
            @JsonProperty(value = "properties", required = true) Object properties,
            @JsonProperty(value = "properties", required = true) LogAnalyticsDataConnectionProperties properties) {
        super(properties);
        this.properties = properties;
    }

    /**
     * Get the properties property: The properties property.
     *
     * @return the properties value.
     */
    public LogAnalyticsDataConnectionProperties getProperties() {
        return this.properties;
    }

    /** {@inheritDoc} */
    @Override
    public LogAnalyticsDataConnectionRequest setName(String name) {
        super.setName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LogAnalyticsDataConnectionRequest setContent(DataConnectionContent content) {
        super.setContent(content);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LogAnalyticsDataConnectionRequest setFrequency(DataConnectionFrequency frequency) {
        super.setFrequency(frequency);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public LogAnalyticsDataConnectionRequest setFrequencyOffset(Integer frequencyOffset) {
        super.setFrequencyOffset(frequencyOffset);
        return this;
    }
}
